// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.pipeline;

option java_package = "org.secretflow.proto.pipeline";

message TaskConfig {
  // 任务发起者的 id
  string task_initiator_id = 1 [json_name = "task_initiator_id"];
  // 授权的范围
  // kuscia模式填写 {project_id}
  // local模式填写 "default"
  string scope = 2 [json_name = "scope"];
  // 任务内容，比如 NodeEvalParam
  // base64格式
  string task_body = 3 [json_name = "task_body"];

  // 任务发起者使用私钥对 task_initiator_id || . || scope || . || task_body 的签名
  string signature = 20 [json_name = "signature"];

  // 签名算法
  //   * RS256: RSASSA-PKCS1-v1_5 using SHA-256
  //   * ES256: ECDSA using P-256 and SHA-256
  string sign_algorithm = 21 [json_name = "sign_algorithm"];

  // PEM格式的任务发起者多级证书，根证书位于最后，从后往前逐个验证
  repeated string task_initiator_certs = 22 [json_name = "task_initiator_certs"];

  // capsule manager service
  string capsule_manager_endpoint = 23
  [json_name = "capsule_manager_endpoint"];
}